{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","className","src","this","props","id","alt","name","email","Component","CardList","robots","cardArray","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,E,4JAbd,WACC,OACE,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BC,KAAKC,MAAMC,GAArC,YAAmDC,IAAG,UAAKH,KAAKC,MAAMG,QAC9E,gCACC,6BAAKJ,KAAKC,MAAMG,OAChB,4BAAIJ,KAAKC,MAAMI,kB,GAPFC,aCqBJC,EAlBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACVC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OACE,cAAC,EAAD,CAEAV,GAAIM,EAAOI,GAAGV,GACdE,KAAMI,EAAOI,GAAGR,KAChBC,MAAOG,EAAOI,GAAGP,OAHZG,EAAOI,GAAGV,OAOlB,OACC,8BACKO,KCTQI,EARD,SAACZ,GACd,OACC,qBAAKa,MAAO,CAACC,UAAW,SAAUC,OAAO,iBAAkBC,OAAO,SAAlE,SACEhB,EAAMiB,YCSKC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKtB,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVuB,KAAK,SACLC,YAAY,yBACZC,SAAUH,OCyCEI,G,wDAzCb,aAAe,IAAD,8BACZ,gBAkBFC,eAAgB,SAACC,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAlBxC,EAAKC,MAAQ,CACXvB,OAAO,GACPoB,YAAY,IAJF,E,qDAQd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAU1B,WAAU,IAAD,OACDC,EAAgBrC,KAAK+B,MAAMvB,OAAO8B,QAAO,SAAAC,GAC7C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAElE,OACA,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWsB,aAAcpB,KAAKyB,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAlCRK,IAAMpC,YCITqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACD,cAAC,EAAD,MAECC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0002f3cf.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\n// import './Card.css';\r\n\r\nclass Card extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div className=' tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t\t\t<img src={`https://robohash.org/${this.props.id}?200x200`} alt={`${this.props.name}`}/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>{this.props.name}</h2>\r\n\t\t\t\t\t\t<p>{this.props.email}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n\r\n//{robots} as CardList recieves robots now in \"index.js\" we can destructure it here\r\n\r\n//these things are known as pure or deterministic components\r\nconst CardList=({robots}) => {\r\n\tconst cardArray=robots.map((user,i) => {\r\n\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\tkey={robots[i].id} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email} \r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t})\r\n\treturn (\r\n\t\t<div> \r\n\t\t    {cardArray}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll= (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border:'4px solid grey', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder=\"Search Your RoboFriend\"\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\n//import {robots} from './robots';\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { \r\n      robots:[],\r\n      searchField:''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=>{\r\n      return response.json();\r\n    })\r\n    .then(users=>{\r\n      this.setState({robots:users});\r\n    })\r\n    \r\n  }\r\n\r\n  onSearchChange= (event) => {\r\n    this.setState({searchField:event.target.value})\r\n    \r\n    \r\n  }\r\n  render() {\r\n    const filteredRobots= this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n    });\r\n    return (\r\n    <div className='tc'>\r\n      <h1 className='f1'>RoboFriends</h1>\r\n      <SearchBox searchChange={this.onSearchChange}/>    \r\n      <Scroll>\r\n        <CardList robots={filteredRobots}/>\r\n      </Scroll>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\nReactDOM.render(\n  <React.StrictMode>\n\t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}